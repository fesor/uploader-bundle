<?xml version="1.0" ?>

<!--
  ~ Copyright Â© 2016 Elbek Azimov. Contacts: <atom.azimov@gmail.com>
  -->

<!--suppress ALL, XmlHighlighting -->
<container xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns="http://symfony.com/schema/dic/services"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <!--<parameters>
        <parameter key="exampleapp.example.class">ExampleApp\Example</parameter>
    </parameters>-->

    <services>
        <service id="exampleapp.orm_upload" class="ExampleApp\Command\ORM\UploadCommand">
            <argument>orm:upload</argument>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="doctrine.orm.entity_manager"/>
            <tag name="console.command"/>
        </service>

        <service id="exampleapp.orm_get" class="ExampleApp\Command\ORM\GetCommand">
            <argument>orm:get</argument>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="doctrine.orm.entity_manager"/>
            <tag name="console.command"/>
        </service>

        <service id="exampleapp.orm_remove" class="ExampleApp\Command\ORM\RemoveCommand">
            <argument>orm:remove</argument>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="doctrine.orm.entity_manager"/>
            <tag name="console.command"/>
        </service>

        <service id="exampleapp.orm_update" class="ExampleApp\Command\ORM\UpdateCommand">
            <argument>orm:update</argument>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="doctrine.orm.entity_manager"/>
            <tag name="console.command"/>
        </service>


        <service id="exampleapp.orm_embeddable_upload" class="ExampleApp\Command\ORMEmbeddable\UploadCommand">
            <argument>orm_embeddable:upload</argument>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="doctrine.orm.entity_manager"/>
            <tag name="console.command"/>
        </service>

        <service id="exampleapp.orm_embeddable_get" class="ExampleApp\Command\ORMEmbeddable\GetCommand">
            <argument>orm_embeddable:get</argument>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="doctrine.orm.entity_manager"/>
            <tag name="console.command"/>
        </service>

        <service id="exampleapp.orm_embeddable_remove" class="ExampleApp\Command\ORMEmbeddable\RemoveCommand">
            <argument>orm_embeddable:remove</argument>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="doctrine.orm.entity_manager"/>
            <tag name="console.command"/>
        </service>

        <service id="exampleapp.orm_embeddable_update" class="ExampleApp\Command\ORMEmbeddable\UpdateCommand">
            <argument>orm_embeddable:update</argument>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="doctrine.orm.entity_manager"/>
            <tag name="console.command"/>
        </service>


        <service id="exampleapp.dbal_upload" class="ExampleApp\Command\DBAL\UploadCommand">
            <argument>dbal:upload</argument>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="atom_uploader.uploader"/>
            <argument type="service" id="database_connection"/>
            <tag name="console.command"/>
        </service>

        <service id="exampleapp.dbal_get" class="ExampleApp\Command\DBAL\GetCommand">
            <argument>dbal:get</argument>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="atom_uploader.uploader"/>
            <argument type="service" id="database_connection"/>
            <tag name="console.command"/>
        </service>

        <service id="exampleapp.dbal_remove" class="ExampleApp\Command\DBAL\RemoveCommand">
            <argument>dbal:remove</argument>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="atom_uploader.uploader"/>
            <argument type="service" id="database_connection"/>
            <tag name="console.command"/>
        </service>

        <service id="exampleapp.dbal_update" class="ExampleApp\Command\DBAL\UpdateCommand">
            <argument>dbal:update</argument>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="atom_uploader.uploader"/>
            <argument type="service" id="database_connection"/>
            <tag name="console.command"/>
        </service>

        <service id="atom_uploader.dbal.mapping_helper"
                 class="ExampleApp\Mapping\DBALMappingHelper" public="false">
            <tag name="atom_uploader.mapping.helper_repo"/>
        </service>
    </services>
</container>
